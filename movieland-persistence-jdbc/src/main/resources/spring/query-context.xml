<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="getAllMovieSQL" class="java.lang.String">
        <constructor-arg value="SELECT m.id, m.nameRussian, m.nameNative, m.yearOfRelease, m.description,
                                       m.rating, m.price, m.picturePath
        FROM movie m"/>
    </bean>

    <bean id="getAllMovieToCountrySQL" class="java.lang.String">
        <constructor-arg value=" SELECT mc.movieId, c.id, c.country
        FROM country c, movie2country mc
        WHERE c.id = mc.countryId;"/>
    </bean>

    <bean id="getAllMovieToGenreSQL" class="java.lang.String">
        <constructor-arg value=" SELECT mg.movieId, g.id, g.genre
        FROM genre g, movie2genre mg
        WHERE g.id = mg.genreId;"/>
    </bean>

    <bean id="getRandomMovieSQL" class="java.lang.String">
        <constructor-arg value=" SELECT m.id, m.nameRussian, m.nameNative, m.yearOfRelease, m.description,
                                       m.rating, m.price, m.picturePath
        FROM movie m
        ORDER BY RAND() LIMIT 3;"/>
    </bean>

    <bean id="getAllGenreSQL" class="java.lang.String">
        <constructor-arg value=" SELECT g.id, g.genre
        FROM genre g;"/>
    </bean>

    <bean id="getMoviesByGenreIdSQL" class="java.lang.String">
        <constructor-arg value=" SELECT m.id, m.nameRussian, m.nameNative, m.yearOfRelease, m.description,
                                       m.rating, m.price, m.picturePath
        FROM movie m, movie2genre mg
        WHERE m.id = mg.movieId and mg.genreId = ?;"/>
    </bean>
</beans>
